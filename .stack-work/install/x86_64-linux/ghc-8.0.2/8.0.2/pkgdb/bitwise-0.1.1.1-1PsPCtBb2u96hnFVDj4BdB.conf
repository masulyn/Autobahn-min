name: bitwise
version: 0.1.1.1
id: bitwise-0.1.1.1-1PsPCtBb2u96hnFVDj4BdB
key: bitwise-0.1.1.1-1PsPCtBb2u96hnFVDj4BdB
license: BSD3
copyright: (c) 2012,2016 Claude Heiland-Allen
maintainer: claude@mathr.co.uk
homepage: https://code.mathr.co.uk/bitwise
synopsis: fast multi-dimensional unboxed bit packed Bool arrays
description:
    Unboxed multidimensional bit packed Bool arrays with fast aggregate
    operations based on lifting Bool operations to bitwise operations.
    .
    There are many other bit packed structures out there, but none met
    all of these requirements:
    .
    (1) unboxed bit packed Bool array,
    .
    (2) multi-dimensional indexing,
    .
    (3) fast (de)serialization, or interoperable with foreign code,
    .
    (4) fast aggregate operations (fold, map, zip).
    .
    Quick tour of the bitwise library:
    .
    [Data.Bits.Bitwise] Lift boolean operations on 'Bool' to bitwise
    operations on 'Data.Bits.Bits'.
    .
    [Data.Array.BitArray] Immutable bit arrays.
    .
    [Data.Array.BitArray.ST] Mutable bit arrays in 'Control.Monad.ST.ST'.
    .
    [Data.Array.BitArray.IO] Mutable bit arrays in 'IO'.
    .
    [Data.Array.BitArray.ByteString] (De)serialization.
    .
    [Codec.Image.PBM] Portable bitmap monochrome 2D image format.
    .
    Very rough performance benchmarks:
    .
    * immutable random access single bit reads:
    @BitArray ix@ is about 40% slower than @UArray ix Bool@,
    .
    * 'Control.Monad.ST.ST' mutable random access single bit reads:
    @STBitArray s ix@ is about the same as @STUArray s ix Bool@,
    .
    * immutable map @Bool -> Bool@:
    @BitArray ix@ is about 85x faster than @UArray ix Bool@,
    .
    * immutable zipWith @Bool -> Bool -> Bool@:
    @BitArray ix@ is about 1300x faster than @UArray ix Bool@.
category: Data, Data Structures, Bit Vectors
author: Claude Heiland-Allen
exposed: True
exposed-modules:
    Codec.Image.PBM Data.Array.BitArray Data.Array.BitArray.ByteString
    Data.Array.BitArray.IO Data.Array.BitArray.ST Data.Bits.Bitwise
hidden-modules: Data.Array.BitArray.Internal Compat
abi: 782a87d6c6655e0b74f9b9e2a9660437
trusted: False
import-dirs: /r/autobahn/Autobahn-min-mar/.stack-work/install/x86_64-linux/ghc-8.0.2/8.0.2/lib/x86_64-linux-ghc-8.0.2/bitwise-0.1.1.1-1PsPCtBb2u96hnFVDj4BdB
library-dirs: /r/autobahn/Autobahn-min-mar/.stack-work/install/x86_64-linux/ghc-8.0.2/8.0.2/lib/x86_64-linux-ghc-8.0.2/bitwise-0.1.1.1-1PsPCtBb2u96hnFVDj4BdB
dynamic-library-dirs: /r/autobahn/Autobahn-min-mar/.stack-work/install/x86_64-linux/ghc-8.0.2/8.0.2/lib/x86_64-linux-ghc-8.0.2
data-dir: /r/autobahn/Autobahn-min-mar/.stack-work/install/x86_64-linux/ghc-8.0.2/8.0.2/share/x86_64-linux-ghc-8.0.2/bitwise-0.1.1.1
hs-libraries: HSbitwise-0.1.1.1-1PsPCtBb2u96hnFVDj4BdB
depends:
    base-4.9.1.0 bytestring-0.10.8.1 array-0.5.1.1
haddock-interfaces: /r/autobahn/Autobahn-min-mar/.stack-work/install/x86_64-linux/ghc-8.0.2/8.0.2/doc/bitwise-0.1.1.1/bitwise.haddock
haddock-html: /r/autobahn/Autobahn-min-mar/.stack-work/install/x86_64-linux/ghc-8.0.2/8.0.2/doc/bitwise-0.1.1.1
