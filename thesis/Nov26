1. Heap profiling testing
  - Generally, hit or miss
  - Some trends when compared to time profiling (look at chart below):
    - Mostly worsened performance (not eliminating fewer bangs but eliminating all aka giving up, or not terminating)
    - Sometimes comparable
    - Occasionally very good! (Eliminated fewer bangs but improved time performance or eliminated more bangs)
  - Profiles can sometimes give hints as to how useful time/heap profiling will be
    - Closer look at prolog, lcss, wheel-sieve2
  - Idea: 
    - Instead of allowing users to choose time/heap profiling, have Aut 2.0 be (somewhat) smart and decide for user
    - Mixed profiling?
2. Quick check 
  - Confirmed that random test input generator works on finding non terminating input in small programs (fibonacci)
  - most nofib programs already check for bad input
  - lcss: bad input (negative third number in input array) could result in non termination (irregardless of if there's a bang)
  - Still valuable if it can find bad input, but not sure how valuable until run large scale experiments on more programs
  - To run large scale experiments: need to a way to automatically generate test generators based on input type
  - Potentially: apply quick check at the very end, although my guess is that it won't be very helpful
3. Winter break plans
  - Talked to Sam


========================= selection of results ==============================
(first line: heap
second line: time)

                no.cut  no.cut  orig    orig    Aut1    Aut1     Aut2    Aut2
                files   pats    time    bangs   time    bangs   time    bangs

Better performance:

boyer2          2       92      1       0       0.79    84      0.82    5
                                1       0       0.82    70.80   0.80    10.20

calendar        0       0       1       0       0.50    32      0.25    7
                                1       0       0.54    31.75   0.46    0.75


Comparable:

lcss            0       0       1       0       0.32    37      0.32    9
                                1       0       0.32    24      0.21    7
                                
atom            0       0       1       0       0.51    35      0.99    0
                                1       0       0.43    36.57   0.78    0


Worse performance:

prolog          6       241     1       0       0.83    99      0.83    0
                                1       0       0.73    65.33   0.71    1.83
